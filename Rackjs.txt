import React, { useEffect } from 'react';

const Rack = ({ cart, setCart, removeFromRack }) => {
  const totalPrice = cart.reduce((total, item) => total + (item.beer.Price || 0) * item.quantity, 0);

  const increaseQuantity = (index) => {
    const updatedCart = [...cart];
    updatedCart[index].quantity += 1;
    setCart(updatedCart);
    localStorage.setItem('cart', JSON.stringify(updatedCart)); // Save to local storage
  };

  const decreaseQuantity = (index) => {
    const updatedCart = [...cart];
    if (updatedCart[index].quantity > 1) {
      updatedCart[index].quantity -= 1;
      setCart(updatedCart);
      localStorage.setItem('cart', JSON.stringify(updatedCart)); // Save to local storage
    } else {
      handleRemoveFromRack(index);
    }
  };

  const handleRemoveFromRack = (index) => {
    const updatedCart = cart.filter((_, i) => i !== index);
    setCart(updatedCart);
    localStorage.setItem('cart', JSON.stringify(updatedCart)); // Save to local storage
    removeFromRack(index); // Call the removeFromRack function
  };

  // Load cart from local storage when the component mounts
  useEffect(() => {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
      const parsedCart = JSON.parse(savedCart);
      console.log('Loaded cart from local storage:', parsedCart); // Debugging
      setCart(parsedCart); // Load cart from local storage
    }
  }, [setCart]);

  return (
    <div style={{ padding: '20px', textAlign: 'center' }}>
      <h1>This is the Rack (aka the Cart)</h1>
      {cart.length === 0 ? (
        <p>Your rack is empty.</p>
      ) : (
        <div>
          <ul style={{ listStyleType: 'none', padding: 0 }}>
            {cart.map((item, index) => (
              <li key={index} style={{ 
                margin: '10px 0', 
                border: '1px solid #ccc', 
                padding: '10px', 
                borderRadius: '5px', 
                display: 'flex', 
                justifyContent: 'space-between', // Align items to the ends
                alignItems: 'center' // Center items vertically
              }}>
                <div>
                  {item.beer.Name} - {item.beer.Price ? item.beer.Price.toFixed(2) : 'N/A'}$ 
                  <span> (Quantity: {item.quantity})</span>
                </div>
                <div>
                  <button 
                    onClick={() => increaseQuantity(index)} 
                    style={{ 
                      marginLeft: '10px', 
                      backgroundColor: '#28a745', 
                      color: 'white', 
                      border: 'none', 
                      borderRadius: '5px', 
                      padding: '5px 10px' 
                    }}
                  >
                    +
                  </button>
                  <button 
                    onClick={() => decreaseQuantity(index)} 
                    style={{ 
                      marginLeft: '5px', 
                      backgroundColor: '#dc3545', 
                      color: 'white', 
                      border: 'none', 
                      borderRadius: '5px', 
                      padding: '5px 10px' 
                    }}
                  >
                    -
                  </button>
                  <button 
                    onClick={() => handleRemoveFromRack(index)} 
                    style={{ 
                      marginLeft: '10px', 
                      backgroundColor: '#dc3545', 
                      color: 'white', 
                      border: 'none', 
                      borderRadius: '5px', 
                      padding: '5px 10px' 
                    }}
                  >
                    Remove
                  </button>
                </div>
              </li>
            ))}
          </ul>
          <h2>Total Price: ${totalPrice.toFixed(2)}</h2>
          <button style={{ marginTop: '20px', backgroundColor: '#28a745', color: 'white', border: 'none', borderRadius: '5px', padding: '10px 20px' }}>
            Place Order
          </button>
        </div>
      )}
    </div>
  );
};

export default Rack;